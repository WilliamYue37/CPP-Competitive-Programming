<snippet>
	<content><![CDATA[
//Given three colinear points p, q, r, the function checks if point q lies on line segment 'pr' 
bool onSegment(pi p, pi q, pi r) { 
    return q.ff <= max(p.ff, r.ff) && q.ff >= min(p.ff, r.ff) && q.ss <= max(p.ss, r.ss) && q.ss >= min(p.ss, r.ss);
} 

//To find orientation of ordered triplet (p, q, r)
//The function returns following values:
//0 --> p, q and r are colinear
//1 --> Clockwise
//2 --> Counterclockwise
int orientation(pi p, pi q, pi r) { 
    int val = (q.ss - p.ss) * (r.ff - q.ff) - (q.ff - p.ff) * (r.ss - q.ss);
    if (val == 0) return 0;  //colinear
    return val > 0 ? 1 : 2; //clockwise or counterclockwise 
}

bool intersect(pi p1, pi q1, pi p2, pi q2) { //returns true if line segment 'p1q1' and 'p2q2' intersect 
    //Find the four orientations needed for general and special cases 
    int o1 = orientation(p1, q1, p2); 
    int o2 = orientation(p1, q1, q2); 
    int o3 = orientation(p2, q2, p1); 
    int o4 = orientation(p2, q2, q1); 
  
    //General case 
    if (o1 != o2 && o3 != o4) return true; 
  
    //Special Cases 
    if (o1 == 0 && onSegment(p1, p2, q1)) return true; //p1, q1 and p2 are colinear and p2 lies on segment p1q1
    if (o2 == 0 && onSegment(p1, q2, q1)) return true; //p1, q1 and q2 are colinear and q2 lies on segment p1q1
    if (o3 == 0 && onSegment(p2, p1, q2)) return true; //p2, q2 and p1 are colinear and p1 lies on segment p2q2
    if (o4 == 0 && onSegment(p2, q1, q2)) return true; //p2, q2 and q1 are colinear and q1 lies on segment p2q2
  
    return false; // Doesn't fall in any of the above cases 
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>intersect</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
	<description>Intersection of Line Segments</description>
</snippet>
